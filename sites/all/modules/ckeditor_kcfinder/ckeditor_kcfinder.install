<?php

/**
 * Implements hook_requirements().
 */
function ckeditor_kcfinder_requirements($phase) {

  // The libraries_get_path can be called on a library even if only the directory exists.
  // We just want to know if the library exists, we can use the parsed library details later in the module's
  // lifecycle but here, we just want to know if it exists.
  $kcfinder_lib = libraries_get_path('kcfinder');

  $t = get_t();

  $results = array(
    'ckeditor_kcfinder' => array(
      'title' => $t('KCFinder web file manager'),
      'value' => '',
      'severity' => REQUIREMENT_OK,
      'description' => '',
    ),
  );

  switch ($phase) {
    case 'runtime':
      if (!$kcfinder_lib) {

        $error_msg = $t('The CKEditor KCFinder integration module requires the KCFinder library.') . '<br />';
        $error_msg .= t('You need to download and extract !kcfinder_lib_link into the library folder of your site (i.e.: sites/all/libraries).',
          array(
            '!kcfinder_lib_link' => l(t('KCFinder web file manager'), 'https://github.com/sunhater/kcfinder/releases'),
          ));
        $results['ckeditor_kcfinder']['severity'] = REQUIREMENT_ERROR;
        $results['ckeditor_kcfinder']['value'] = 'Missing';
        $results['ckeditor_kcfinder']['description'] = $error_msg;

        return $results;
      }
      else {
        // Attempt to get the library version.
        $lib = libraries_detect('kcfinder');

        if(!empty($lib['version'])) {
          $results['ckeditor_kcfinder']['severity'] = REQUIREMENT_OK;
          $results['ckeditor_kcfinder']['value'] = $lib['version'];
        }
        else {
          $results['ckeditor_kcfinder']['severity'] = REQUIREMENT_ERROR;
          $results['ckeditor_kcfinder']['value'] = 'Missing';
          $results['ckeditor_kcfinder']['description'] = t('Cannot find version information for the KCFinder library.');
        }

        return $results;
      }
      break;
  }
}

/**
 * Implements hook_install().
 * ckeditor_kcfinder_install function.
 * 
 * @access public
 * @return void
 * Define two variables used for this module : kcfinder_upload_url , kcfinder_theme
 * By default this variables not set
 */
 
function ckeditor_kcfinder_install(){
	
	global $base_url;
  $file_public_path = variable_get('file_public_path', conf_path() . '/files');
  $default_upload_url = $base_url . '/' . $file_public_path;
  
	$default_settings_url = variable_get('kcfinder_upload_url','');
	//Set default kcfinder folder
	if(empty($default_settings_url)){	
		variable_set('kcfinder_upload_url', $default_upload_url);
	}
	
	$default_settings_theme = variable_get('kcfinder_theme', '');
	//Set default theme and remove oxygen theme set for kcfinder
	
	if(empty($default_settings_theme) || $default_settings_theme == 'oxygen') {
		variable_set('kcfinder_theme','default');
	}
}

/**
 * ckeditor_kcfinder_unistall function.
 * 
 * @access public
 * @return void
 * remove two varibles from db
 */
 
function ckeditor_kcfinder_unistall(){
	variable_del('kcfinder_upload_url');
	variable_del('kcfinder_theme');
}


